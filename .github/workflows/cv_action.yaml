name: Run CV Action

on:
    pull_request_target:
        types: [opened, synchronize, reopened]
        branches: [ main ]
    workflow_dispatch:
        
jobs:
    verify-chart:
        name: Verify Helm Chart
        runs-on: ubuntu-20.04
        steps:
            - name: get env
              run: env

            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up Python 3.x
              uses: actions/setup-python@v2
              with:
                  python-version: '3.9'

            - name: Set up Python scripts on PR branch
              run: |
                  # set up python requirements and scripts on PR branch
                  python3 -m venv ve1
                  cd scripts && ../ve1/bin/pip3 install -r requirements.txt && cd ..
                  cd scripts && ../ve1/bin/python3 setup.py install && cd ..

            - name: Install oc
              uses: redhat-actions/openshift-tools-installer@v1
              with:
                  oc: latest

            - name: Set cluster login params
              id: login-params
              run: |
                  #calculate cluster params
                  API_SERVER=$( echo -n ${{ secrets.API_SERVER }} | base64 -d)
                  echo "::set-output name=API_SERVER::${API_SERVER}"
                  if [ $GITHUB_REPOSITORY == "redhat-certification/chart-verifier" ]; then
                      echo "::set-output name=insecure_skip_tls_verify::false"
                  else
                      echo "::set-output name=insecure_skip_tls_verify::true"
                  fi

            - uses: redhat-actions/oc-login@v1
              id: oc-login
              with:
                  openshift_server_url: ${{ steps.login-params.outputs.API_SERVER }}
                  openshift_token: ${{ secrets.CLUSTER_TOKEN }}
                  insecure_skip_tls_verify: ${{ steps.login-params.outputs.insecure_skip_tls_verify }}

            - name: create service account
              id: create_service_account
              env:
                  API_SERVER: ${{ steps.login-params.outputs.API_SERVER }}
              run: |
                  CHARTS=$(echo "charts-${{ github.run_id }}-${{ github.run_attempt}}")
                  echo "::set-output name=charts::${CHARTS}"
                  ve1/bin/sa-for-chart-testing --create ${CHARTS} --token token.txt --server ${API_SERVER}

            # Install chart-verifier CLI
            - uses: redhat-actions/openshift-tools-installer@v1
              with:
                  source: github
                  chart-verifier: 0.1.0

            - uses: redhat-actions/chart-verifier@v1.0.0
              with:
                chart_uri: ./tests/charts/psql-service/0.1.9/psql-service-0.1.9.tgz
                verify_args: --set profile.vendortype=partner
                fail: false


            - uses: redhat-actions/chart-verifier@v1.0.0
              with:
                  chart_uri: https://github.com/redhat-certification/chart-verifier/blob/main/tests/charts/psql-service/0.1.9/psql-service-0.1.9.tgz?raw=true
                  verify_args: --set profile.vendortype=partner
                  fail: false

            - name: echo outputs
              run: |
                echo "${{ steps.verify.outputs.report_filename }}"
                pwd

            - uses: redhat-actions/oc-login@v1
              if: ${{ always() && steps.oc-login.conclusion == 'success' }}
              id: oc-login-again
              with:
                  openshift_server_url: ${{ steps.login-params.outputs.API_SERVER }}
                  openshift_token: ${{ secrets.CLUSTER_TOKEN }}
                  insecure_skip_tls_verify: ${{ steps.login-params.outputs.insecure_skip_tls_verify }}

            - name: Delete Namespace
              if: ${{ always() && steps.oc-login-again.conclusion == 'success' }}
              run: |
                  # delete the namespace
                  ve1/bin/sa-for-chart-testing --delete ${{ steps.create_service_account.outputs.charts }}

